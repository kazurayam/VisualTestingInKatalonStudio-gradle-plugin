/*
 * visualtesinginks-gradle-plugin/build.gradle
 *
 */

// applying community plugins
plugins {
    id "com.gradle.plugin-publish" version "0.10.1"
    id "com.dorongold.task-tree" version "1.3.1"
}

group = 'com.kazurayam'
jar.baseName = 'visualtestinginks-gradle-plugin'

version = '0.1.19'





// applying built-in plugins
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'eclipse'

ext {
    artifactId = 'visualtestinginks'

    slf4jVersion = '1.7.2'
    spockVersion = '1.3-groovy-2.5'
}

repositories {
    jcenter()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.5.4'

    // https://mvnrepository.com/artifact/de.undercouch/gradle-download-task
    implementation group: 'de.undercouch', name: 'gradle-download-task', version: '3.4.3'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    testImplementation gradleTestKit()
    testImplementation group: 'org.spockframework', name: 'spock-core', version: "${spockVersion}"
}


pluginBundle {
    website = 'https://github.com/kazurayam/visualtestinginks-gradle-plugin'
    vcsUrl  = 'https://github.com/kazurayam/visualtestinginks-gradle-plugin.git'
    tags    = [ 'katalon' ]
}

// configuration for java-gradle-plugin
gradlePlugin {
    plugins {
        visualtestinginks {
            id = "com.github.kazurayam.visualtestinginks"
            version = "${version}"
            displayName = "A Gradle Plugin for any Katalon Studio users to import the \"Visual Testing in Katalon Studio\" components into your Katalon Studio projects."
            description = "With this Gradle Plugin you can import the components of \"Visual Testing in Katalon Studio\"(Test Cases, Test Suites, Test Listener, Keywords) into your own Katalon Studio project and make it capable of running WebUI screenshot comparison testings."
            implementationClass = "com.kazurayam.visualtestinginks.gradle.VTPlugin"
        }
    }
}
// $ gradle publishPlugins

task echoVersion {
    doLast {
        println "id \'com.github.kazurayam.visualtestinginks\' version \'${version}\'"
    }
}

publishing {
    publications {
        pluginPublication (MavenPublication) {
            from       components.java
            groupId    "${group}"
            artifactId "${artifactId}"
            version    "${version}"
        }
    }
}
publishToMavenLocal.dependsOn jar
publishToMavenLocal.finalizedBy echoVersion

// $ gradle publishToMavenLocal


// VTPluginSpec runs org.gradle.testkit.runner.GradleRunner instance.
// The GradleRunner runs on another JVM apart from the current JVM as this build runs.
// If we are behind proxy, we need to pass the Proxy settings to the JVM for GradleRunner.
tasks.withType(Test) {
    if (System.getProperty('http.proxyHost') != null) {
        systemProperty 'http.proxyHost' , System.getProperty('http.proxyHost')
    }
    if (System.getProperty('http.proxyPort') != null) {
        systemProperty 'http.proxyPort' , System.getProperty('http.proxyPort')
    }
    if (System.getProperty('https.proxyHost') != null) {
        systemProperty 'https.proxyHost', System.getProperty('https.proxyHost')
    }
    if (System.getProperty('https.proxyPort') != null) {
        systemProperty 'https.proxyPort', System.getProperty('https.proxyPort')
    }

}
